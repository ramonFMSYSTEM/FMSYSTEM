/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */



package Presentacion;

import Reportes.Reportes;
import claseConectar.conexion;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;



import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;


/**
 *
 * @author vitela
 */
public class frmDetalleVenta extends javax.swing.JInternalFrame {

    /** Creates new form DetalleFactura */
    public frmDetalleVenta() {
        initComponents();
        initComponents();
        cargartodasfacturas();
        this.setLocation(25,15 );
       // jDateChooser1.setEnabled(false);

       
    }
    void cargartodasfacturas()
    {
        DefaultTableModel tabla= new DefaultTableModel();
        String []titulos={"ID de venta","Id producto","Nombre producto","Cantidad","Precio ","Total"};
        tabla.setColumnIdentifiers(titulos);
        this.tablaDetalle.setModel(tabla);
        String consulta= "SELECT * FROM detalleventa";
        String []Datos= new String [6];
        try {
            Statement st = cn.createStatement();
            ResultSet rs= st.executeQuery(consulta);
            while(rs.next())
            {
                Datos[0]=rs.getString("id_venta");
                Datos[1]=rs.getString("id_producto");
                Datos[2]=rs.getString("nombre_producto");
                Datos[3]=rs.getString("cantidad_producto");
                Datos[4]=rs.getString("preciounitario_producto");
                Datos[5]=rs.getString("preciototal_venta");
               
                
                tabla.addRow(Datos);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmConsultasProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
                         

private void btnbuscadorActionPerformed(java.awt.event.ActionEvent evt) {                                            
// TODO add your handling code here:
    
      
    
    String num=txtnumero.getText();
    
    String consulta="";
    if(rdbnnumero.isSelected()==true)
    {
        consulta= "SELECT * FROM venta WHERE id_venta='"+num+"'";
    }
    if(rdbbnfecha.isSelected()==true)
    {
           Date fecha=jDateChooser1.getDate();
   SimpleDateFormat formatofecha= new SimpleDateFormat("dd/MM/YYYY");
String fec=""+formatofecha.format(fecha);
        consulta= "SELECT * FROM venta WHERE fecha_venta='"+fec+"'";
    }
    if(rdbntodos.isSelected()==true)
    {
        consulta= "SELECT * FROM venta ";
    }
        DefaultTableModel tabla= new DefaultTableModel();
        String []titulos={"ID de venta","Id usuario","SUBTOTAL","IVA","TOTAL","FECHA"};
        tabla.setColumnIdentifiers(titulos);
        this.tablaDetalle.setModel(tabla);
        
        String []Datos= new String [7];
        try {
            Statement st = cn.createStatement();
            ResultSet rs= st.executeQuery(consulta);
            while(rs.next())
            {
                Datos[0]=rs.getString("id_venta");
                Datos[1]=rs.getString("id_usuario");
               // Datos[2]=rs.getString("nombre_usuario");
                Datos[2]=rs.getString("subtotal_venta");
                Datos[3]=rs.getString("iva_venta");
                Datos[4]=rs.getString("total_venta");
                Datos[5]=rs.getString("fecha_venta");
                
                tabla.addRow(Datos);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmConsultasProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
   
   
    
}                                           

private void rdbnnumeroActionPerformed(java.awt.event.ActionEvent evt) {                                           
// TODO add your handling code here:
    if(rdbnnumero.isSelected()==true)
    {
        txtnumero.setEnabled(true);
        txtnumero.requestFocus();
        jDateChooser1.setDate(null);
        jDateChooser1.setEnabled(false);
        
        
    }
}                                          

private void rdbbnfechaActionPerformed(java.awt.event.ActionEvent evt) {                                           
// TODO add your handling code here:
    if(rdbbnfecha.isSelected()==true)
    {
        jDateChooser1.setEnabled(true);
        txtnumero.setEnabled(false);
        txtnumero.setText("");
        
    }
}                                          

private void rdbntodosActionPerformed(java.awt.event.ActionEvent evt) {                                          
// TODO add your handling code here:
    if(rdbntodos.isSelected()==true)
    {
        jDateChooser1.setEnabled(false);
        jDateChooser1.setDate(null);
        txtnumero.setText("");
        txtnumero.setEnabled(false);
        cargartodasfacturas();
    }
    
    
}                                         

private void mnverActionPerformed(java.awt.event.ActionEvent evt) {                                      
// TODO add your handling code here:
//    int filasele= tbfacturas.getSelectedRow();
//    if(filasele==-1)
//    {
//        JOptionPane.showMessageDialog(null, "No Seleciono ninguna fila");
//    }
//    else
//    {
//           DetalleVenta detalle = new DetalleVenta();
//    Principal.jdpescritorio.add(detalle);
//    detalle.toFront();
//    detalle.setVisible(true);
//        String numfac=tbfacturas.getValueAt(filasele, 0).toString();
//        String cod=tbfacturas.getValueAt(filasele, 1).toString();
//        //String ruc=tbfacturas.getValueAt(filasele, 2).toString();
//        String subtotal=tbfacturas.getValueAt(filasele, 3).toString();
//        String igv=tbfacturas.getValueAt(filasele, 4).toString();
//        String total=tbfacturas.getValueAt(filasele, 5).toString();
//        String fecha=tbfacturas.getValueAt(filasele, 6).toString();
//        DetalleVenta.txtfac.setText(numfac);
//        DetalleVenta.txtcod.setText(cod);
//       // DetalleVenta.txtruc.setText(ruc);
//        DetalleVenta.txtsub.setText(subtotal);
//        DetalleVenta.txtigv.setText(igv);
//        DetalleVenta.txttot.setText(total);
//        DetalleVenta.txtfecha.setText(fecha);
//        DefaultTableModel model = (DefaultTableModel) DetalleVenta.tbdetalle.getModel();
//        String ver="SELECT * FROM detallefactura WHERE num_fac='"+numfac+"'";
//        String []datos= new String[5]   ;
//        try {
//                Statement st = cn.createStatement();
//                ResultSet rs= st.executeQuery(ver);
//                while(rs.next())
//                {
//                    datos[0]=rs.getString("cod_pro");
//                    datos[1]=rs.getString("des_pro");
//                    datos[2]=rs.getString("cant_pro");
//                    datos[3]=rs.getString("pre_unit");
//                    datos[4]=rs.getString("pre_tot");
//                    model.addRow(datos);
//                    
//                }
//                DetalleVenta.tbdetalle.setModel(model);
//            } catch (SQLException ex) {
//                Logger.getLogger(ConsultasVentas.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        
//        
//        
//        
//        
//  
//    }
}                                     

private void mneliminarActionPerformed(java.awt.event.ActionEvent evt) {                                           
//// TODO add your handling code here:
//        int fila=tbfacturas.getSelectedRow();
//    if(fila>=0)
//    {
//        String cod=tbfacturas.getValueAt(fila, 0).toString();
//            try {
//                PreparedStatement pst = cn.prepareStatement("DELETE FROM factura WHERE num_fac='"+cod+"'");
//                pst.executeUpdate();
//            } catch (SQLException ex) {
//                Logger.getLogger(ConsultasBoletas.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            cargartodasfacturas();
//        
//    }
//    else
//    {
//        JOptionPane.showMessageDialog(this, "Seleccione alguna fila");
//    }
}                                          

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnbuscador;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    //private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mneliminar;
    private javax.swing.JMenuItem mnver;
    private javax.swing.JRadioButton rdbbnfecha;
    private javax.swing.JRadioButton rdbnnumero;
    private javax.swing.JRadioButton rdbntodos;

    private javax.swing.JTextField txtnumero;
    // End of variables declaration                   
conexion cc= new conexion();
Connection cn= cc.conectar();



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDetalle = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Detalle de Venta");

        tablaDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaDetalle);

        jButton1.setText("Generar reporte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(50, 50, 50))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         try{
            Reportes reporte=new Reportes();
            try {
                reporte.ReporteVentaDetalle();
            } catch (SQLException ex) {
                Logger.getLogger(Reportes.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }catch(JRException ex){
            Logger.getLogger(Reportes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tablaDetalle;
    // End of variables declaration//GEN-END:variables
}
