/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


package Presentacion;

import claseConectar.conexion;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vitela
 */
public class frmConsultasProductos extends javax.swing.JInternalFrame {

    /** Creates new form ConsultasProductos */
    public frmConsultasProductos() {
        initComponents();
        mostrartodosproductos();
    }
    void mostrartodosproductos()
    {
        DefaultTableModel tabla= new DefaultTableModel();
        String []titulos={"ID de producto","Nombre","Descripcion","Precio","Stock"};
        tabla.setColumnIdentifiers(titulos);
        this.tablaProductos.setModel(tabla);
        String consulta= "SELECT * FROM producto_final";
        String []Datos= new String [5];
        try {
            Statement st = cn.createStatement();
            ResultSet rs= st.executeQuery(consulta);
            while(rs.next())
            {
                Datos[0]=rs.getString("id_producto");
                Datos[1]=rs.getString("nombre_producto");
                Datos[2]=rs.getString("descripcion_producto");
                Datos[3]=rs.getString("precio_producto");
                Datos[4]=rs.getString("Stock_producto");
                tabla.addRow(Datos);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmConsultasProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
                
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rbtnProductos = new javax.swing.JRadioButton();
        rbtnTodo = new javax.swing.JRadioButton();
        txtBuscar = new javax.swing.JTextField();
        btnbuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Consulta de Productos");

        buttonGroup1.add(rbtnProductos);
        rbtnProductos.setSelected(true);
        rbtnProductos.setText("Mostrar Productos por Id o Nombre");
        rbtnProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnProductosActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnTodo);
        rbtnTodo.setText("Mostrar todos los Productos");
        rbtnTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnTodoActionPerformed(evt);
            }
        });

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        btnbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Files/buscar.png"))); // NOI18N
        btnbuscar.setText("Buscar");
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbtnProductos)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnbuscar))
                    .addComponent(rbtnTodo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnProductos)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnbuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnTodo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaProductos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(21, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void rbtnTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnTodoActionPerformed
// TODO add your handling code here:
    if(rbtnTodo.isSelected()==true)
    {
        txtBuscar.setText("");
        txtBuscar.setEnabled(false);
        mostrartodosproductos();
    }
   
}//GEN-LAST:event_rbtnTodoActionPerformed
void cargarlistaproductos(String dato){
        String [] Titulo = {"ID de producto","Nombre","Descripcion","Precio","Stock"};
        DefaultTableModel tabla=new DefaultTableModel(null,Titulo);
    String []Registro= new String[5];
    String mostrar="SELECT * FROM producto_final WHERE CONCAT (id_producto,'',nombre_producto) LIKE '%"+dato+"%'"; 
    Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs =st.executeQuery(mostrar);
            while(rs.next())
            {
                Registro[0]=rs.getString("id_producto");
                Registro[1]=rs.getString("nombre_producto");
                Registro[2]=rs.getString("descripcion_producto");
                Registro[3]=rs.getString("precio_producto");
                Registro[4]=rs.getString("Stock_producto");
                
                tabla.addRow(Registro);
            }
            tablaProductos.setModel(tabla);
        } catch (SQLException ex) {
            Logger.getLogger(frmConsultaProductosV.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    
    
    }
private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
// TODO add your handling code here:
    String buscar=txtBuscar.getText();
    if(rbtnProductos.isSelected()==true)
    {
         DefaultTableModel tabla= new DefaultTableModel();
        String []titulos={"ID de producto","Nombre","Descripcion","Precio","Stock"};
        tabla.setColumnIdentifiers(titulos);
        this.tablaProductos.setModel(tabla);
        String consulta="SELECT * FROM producto_final WHERE CONCAT (id_producto,'',nombre_producto) LIKE '%"+buscar+"%'"; 
       // String consulta= "SELECT * FROM producto WHERE descripcion  LIKE '%"+buscar+"%'";
        String []Datos= new String [5];
        try {
            Statement st = cn.createStatement();
            ResultSet rs= st.executeQuery(consulta);
            while(rs.next())
            {
                Datos[0]=rs.getString("id_producto");
                Datos[1]=rs.getString("nombre_producto");
                Datos[2]=rs.getString("descripcion_producto");
                Datos[3]=rs.getString("precio_producto");
                Datos[4]=rs.getString("Stock_producto");
                tabla.addRow(Datos);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmConsultasProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    else
    {
        mostrartodosproductos();
    }
}//GEN-LAST:event_btnbuscarActionPerformed

private void rbtnProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnProductosActionPerformed
// TODO add your handling code here:
    if(rbtnProductos.isSelected()==true)
    {
        txtBuscar.setEnabled(true);
        txtBuscar.requestFocus();
    }
}//GEN-LAST:event_rbtnProductosActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        // TODO add your handling code here:
         cargarlistaproductos(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnbuscar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbtnProductos;
    private javax.swing.JRadioButton rbtnTodo;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
conexion cc= new conexion();
Connection cn = cc.conectar();

}
